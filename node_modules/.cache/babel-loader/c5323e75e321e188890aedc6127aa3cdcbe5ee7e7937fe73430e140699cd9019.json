{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arman\\\\Desktop\\\\ktl-isp-billing-frontend-main\\\\ktl-isp-billing-frontend-main\\\\src\\\\pages\\\\DashboardStats.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// const DashboardStats = () => {\n//   return (\n//     <div className=\"p-6\">\n//       <h1 className=\"text-3xl font-bold text-white mb-6\">Dashboard Stats</h1>\n//       <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6\">\n//         <p className=\"text-white\">I am here.</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DashboardStats;\n\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\"; // make sure this points to your axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardStats = ({\n  showOnly\n}) => {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await api.get(\"/dashboard/stats\");\n        // ðŸ‘† replace with your real API endpoint\n        setStats(response.data.data);\n      } catch (error) {\n        console.error(\"Failed to fetch dashboard stats:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  if (!stats) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  // show only selected field (like \"id\")\n  if (showOnly && stats[showOnly] !== undefined) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-800 text-white rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: showOnly.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: stats[showOnly]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  // fallback full stats view\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-3 gap-4\",\n    children: Object.keys(stats).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-800 text-white rounded-lg\",\n      children: [key, \": \", stats[key]]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardStats, \"zr3d2rzWUuuAzE7RwCrYeGz8vE0=\");\n_c = DashboardStats;\nexport default DashboardStats;\nvar _c;\n$RefreshReg$(_c, \"DashboardStats\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","DashboardStats","showOnly","_s","stats","setStats","loading","setLoading","fetchStats","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","toUpperCase","Object","keys","map","key","_c","$RefreshReg$"],"sources":["C:/Users/Arman/Desktop/ktl-isp-billing-frontend-main/ktl-isp-billing-frontend-main/src/pages/DashboardStats.jsx"],"sourcesContent":["// import React from 'react';\r\n\r\n// const DashboardStats = () => {\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h1 className=\"text-3xl font-bold text-white mb-6\">Dashboard Stats</h1>\r\n//       <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6\">\r\n//         <p className=\"text-white\">I am here.</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DashboardStats;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport api from \"../services/api\"; // make sure this points to your axios instance\r\n\r\nconst DashboardStats = ({ showOnly }) => {\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        const response = await api.get(\"/dashboard/stats\"); \r\n        // ðŸ‘† replace with your real API endpoint\r\n        setStats(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch dashboard stats:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p className=\"text-gray-500\">Loading...</p>;\r\n  }\r\n\r\n  if (!stats) {\r\n    return <p className=\"text-red-500\">No data available</p>;\r\n  }\r\n\r\n  // show only selected field (like \"id\")\r\n  if (showOnly && stats[showOnly] !== undefined) {\r\n    return (\r\n      <div className=\"p-4 bg-gray-800 text-white rounded-lg\">\r\n        <h3 className=\"text-lg font-semibold\">{showOnly.toUpperCase()}</h3>\r\n        <p>{stats[showOnly]}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // fallback full stats view\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4\">\r\n      {Object.keys(stats).map((key) => (\r\n        <div key={key} className=\"p-4 bg-gray-800 text-white rounded-lg\">\r\n          {key}: {stats[key]}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardStats;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,kBAAkB,CAAC;QAClD;QACAL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAON,OAAA;MAAGc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpD;EAEA,IAAI,CAACf,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAGc,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1D;;EAEA;EACA,IAAIjB,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAAC,KAAKkB,SAAS,EAAE;IAC7C,oBACEpB,OAAA;MAAKc,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBACpDf,OAAA;QAAIc,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAEb,QAAQ,CAACmB,WAAW,CAAC;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnEnB,OAAA;QAAAe,QAAA,EAAIX,KAAK,CAACF,QAAQ;MAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEV;;EAEA;EACA,oBACEnB,OAAA;IAAKc,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCO,MAAM,CAACC,IAAI,CAACnB,KAAK,CAAC,CAACoB,GAAG,CAAEC,GAAG,iBAC1BzB,OAAA;MAAec,SAAS,EAAC,uCAAuC;MAAAC,QAAA,GAC7DU,GAAG,EAAC,IAAE,EAACrB,KAAK,CAACqB,GAAG,CAAC;IAAA,GADVA,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhDIF,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}