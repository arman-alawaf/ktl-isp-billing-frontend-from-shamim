{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './authSlice';\nimport themeSlice from './themeSlice';\nimport dashboardSlice from './dasboardSlice';\nimport usersSlice from './usersSlice';\nimport rolesSlice from './rolesSlice';\nimport permissionsSlice from './permissionsSlice';\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    theme: themeSlice,\n    dashboard: dashboardSlice,\n    users: usersSlice,\n    roles: rolesSlice,\n    permissions: permissionsSlice\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n    }\n  }),\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;","map":{"version":3,"names":["configureStore","authSlice","themeSlice","dashboardSlice","usersSlice","rolesSlice","permissionsSlice","store","reducer","auth","theme","dashboard","users","roles","permissions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV"],"sources":["C:/Users/Arman/Desktop/ktl-isp-billing-frontend-main/ktl-isp-billing-frontend-main/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './authSlice';\nimport themeSlice from './themeSlice';\nimport dashboardSlice from './dasboardSlice';\nimport usersSlice from './usersSlice';\nimport rolesSlice from './rolesSlice';\nimport permissionsSlice from './permissionsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice,\n    theme: themeSlice,\n    dashboard: dashboardSlice,\n    users: usersSlice,\n    roles: rolesSlice,\n    permissions: permissionsSlice,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\n      },\n    }),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,OAAO,MAAMC,KAAK,GAAGP,cAAc,CAAC;EAClCQ,OAAO,EAAE;IACPC,IAAI,EAAER,SAAS;IACfS,KAAK,EAAER,UAAU;IACjBS,SAAS,EAAER,cAAc;IACzBS,KAAK,EAAER,UAAU;IACjBS,KAAK,EAAER,UAAU;IACjBS,WAAW,EAAER;EACf,CAAC;EACDS,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;IACzD;EACF,CAAC,CAAC;EACJC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;;AAEF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}