{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('authToken'),\n  refreshToken: localStorage.getItem('refreshToken'),\n  isAuthenticated: !!localStorage.getItem('authToken'),\n  loading: false,\n  error: null,\n  expiresAt: null,\n  rememberMe: localStorage.getItem('rememberMe') === 'true'\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.access;\n      state.refreshToken = action.payload.refresh;\n      state.expiresAt = action.payload.expires_at;\n      state.rememberMe = action.payload.remember_me || false;\n      localStorage.setItem('authToken', action.payload.access);\n      localStorage.setItem('refreshToken', action.payload.refresh);\n      if (action.payload.remember_me) {\n        localStorage.setItem('rememberMe', 'true');\n      }\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.refreshToken = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = null;\n      state.expiresAt = null;\n      state.rememberMe = false;\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('rememberMe');\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    updateUser: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  clearError,\n  updateUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","localStorage","getItem","refreshToken","isAuthenticated","loading","error","expiresAt","rememberMe","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","access","refresh","expires_at","remember_me","setItem","loginFailure","logout","removeItem","clearError","updateUser","actions","reducer"],"sources":["C:/Users/Arman/Desktop/ktl-isp-billing-frontend-main/ktl-isp-billing-frontend-main/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('authToken'),\n  refreshToken: localStorage.getItem('refreshToken'),\n  isAuthenticated: !!localStorage.getItem('authToken'),\n  loading: false,\n  error: null,\n  expiresAt: null,\n  rememberMe: localStorage.getItem('rememberMe') === 'true',\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.access;\n      state.refreshToken = action.payload.refresh;\n      state.expiresAt = action.payload.expires_at;\n      state.rememberMe = action.payload.remember_me || false;\n      localStorage.setItem('authToken', action.payload.access);\n      localStorage.setItem('refreshToken', action.payload.refresh);\n      if (action.payload.remember_me) {\n        localStorage.setItem('rememberMe', 'true');\n      }\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.token = null;\n      state.refreshToken = null;\n      state.isAuthenticated = false;\n      state.loading = false;\n      state.error = null;\n      state.expiresAt = null;\n      state.rememberMe = false;\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('rememberMe');\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n    updateUser: (state, action) => {\n      state.user = { ...state.user, ...action.payload };\n    },\n  },\n});\n\nexport const { \n  loginStart, \n  loginSuccess, \n  loginFailure, \n  logout, \n  clearError, \n  updateUser \n} = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}