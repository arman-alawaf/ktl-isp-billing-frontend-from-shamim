{"ast":null,"code":"// src/services/api.js - Optimized with conditional logging and performance improvements\nimport axios from 'axios';\nimport { store } from '../store';\nimport { logout } from '../store/authSlice';\n\n// Base URL configuration\nconst BASE_URL = 'https://ktl-isp-billing-app-qza33.ondigitalocean.app/api/v1';\n\n// Create axios instance with optimized configuration\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 15000,\n  // Reduced from 30s to 15s for better UX\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Global request queue management to prevent duplicate requests\nconst pendingRequests = new Map();\n\n// Development flag for logging\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\n// Request interceptor with timing and deduplication\napi.interceptors.request.use(config => {\n  // Start timing\n  config.metadata = {\n    startTime: performance.now()\n  };\n\n  // Add auth token if available\n  const state = store.getState();\n  const token = state.auth.token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Request deduplication key\n  const requestKey = `${config.method}:${config.url}:${JSON.stringify(config.params)}`;\n\n  // Cancel duplicate requests\n  if (pendingRequests.has(requestKey)) {\n    const controller = pendingRequests.get(requestKey);\n    controller.abort('Duplicate request cancelled');\n  }\n\n  // Create new abort controller for this request\n  const controller = new AbortController();\n  config.signal = controller.signal;\n  pendingRequests.set(requestKey, controller);\n\n  // Only log in development\n  if (isDevelopment) {\n    var _config$method;\n    console.log(`🚀 [API Request] ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, {\n      timestamp: new Date().toISOString(),\n      params: config.params\n    });\n  }\n  return config;\n}, error => {\n  if (isDevelopment) {\n    console.error('❌ [API Request Error]', error);\n  }\n  return Promise.reject(error);\n});\n\n// Response interceptor with timing and auto-retry\napi.interceptors.response.use(response => {\n  // Calculate request duration\n  const duration = performance.now() - response.config.metadata.startTime;\n\n  // Remove from pending requests\n  const requestKey = `${response.config.method}:${response.config.url}:${JSON.stringify(response.config.params)}`;\n  pendingRequests.delete(requestKey);\n\n  // Only log in development or for slow requests\n  if (isDevelopment) {\n    var _response$config$meth;\n    console.log(`✅ [API Response] ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url}`, {\n      status: response.status,\n      duration: `${duration.toFixed(2)}ms`,\n      timestamp: new Date().toISOString()\n    });\n  }\n\n  // Log slow requests even in production for monitoring\n  if (duration > 2000) {\n    console.warn(`🐌 [Slow Request] ${response.config.url} took ${duration.toFixed(2)}ms`);\n\n    // Send to monitoring service in production\n    if (!isDevelopment && window.performanceMetrics) {\n      window.performanceMetrics.push({\n        type: 'slow_request',\n        url: response.config.url,\n        method: response.config.method,\n        duration,\n        timestamp: Date.now()\n      });\n    }\n  }\n  return response;\n}, async error => {\n  var _error$response4;\n  const originalRequest = error.config;\n  const duration = originalRequest !== null && originalRequest !== void 0 && originalRequest.metadata ? performance.now() - originalRequest.metadata.startTime : 0;\n\n  // Remove from pending requests\n  if (originalRequest) {\n    const requestKey = `${originalRequest.method}:${originalRequest.url}:${JSON.stringify(originalRequest.params)}`;\n    pendingRequests.delete(requestKey);\n  }\n\n  // Only log detailed errors in development\n  if (isDevelopment) {\n    var _originalRequest$meth, _error$response;\n    console.error(`❌ [API Error] ${originalRequest === null || originalRequest === void 0 ? void 0 : (_originalRequest$meth = originalRequest.method) === null || _originalRequest$meth === void 0 ? void 0 : _originalRequest$meth.toUpperCase()} ${originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.url}`, {\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      message: error.message,\n      duration: `${duration.toFixed(2)}ms`,\n      timestamp: new Date().toISOString()\n    });\n  } else {\n    var _error$response2;\n    // In production, only log critical errors\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n      var _error$response3;\n      console.error(`Server Error: ${(_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status} for ${originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.url}`);\n    }\n  }\n\n  // Handle token refresh for 401 errors\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const state = store.getState();\n      const refreshToken = state.auth.refreshToken;\n      if (refreshToken) {\n        const response = await api.post('/auth/refresh/', {\n          refresh_token: refreshToken\n        });\n        const {\n          access: newToken\n        } = response.data.data.tokens;\n\n        // Update the authorization header\n        originalRequest.headers.Authorization = `Bearer ${newToken}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      // Refresh failed, logout user\n      store.dispatch(logout());\n      if (typeof window !== 'undefined') {\n        window.location.href = '/login';\n      }\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Enhanced endpoints with organization management\nexport const ENDPOINTS = {\n  // Authentication\n  AUTH: {\n    LOGIN: '/auth/login/',\n    REFRESH: '/auth/refresh/',\n    LOGOUT: '/auth/logout/',\n    VERIFY: '/auth/verify/'\n  },\n  // User Management\n  USERS: {\n    LIST: '/users/',\n    CREATE: '/users/',\n    DETAIL: id => `/users/${id}/`,\n    UPDATE: id => `/users/${id}/`,\n    DELETE: id => `/users/${id}/`,\n    PROFILE: '/users/profile/',\n    CHANGE_PASSWORD: '/users/change-password/',\n    PERMISSIONS: '/users/permissions/'\n  },\n  // Role Management\n  ROLES: {\n    LIST: '/roles/',\n    CREATE: '/roles/',\n    DETAIL: id => `/roles/${id}/`,\n    UPDATE: id => `/roles/${id}/`,\n    DELETE: id => `/roles/${id}/`,\n    ASSIGN: '/roles/assign/',\n    BULK_ASSIGN: '/roles/bulk-assign/'\n  },\n  // User Role Assignments\n  USER_ROLES: {\n    LIST: '/user-roles/',\n    DETAIL: id => `/user-roles/${id}/`,\n    UPDATE: id => `/user-roles/${id}/`,\n    DELETE: id => `/user-roles/${id}/`\n  },\n  // Permissions\n  PERMISSIONS: {\n    LIST: '/permissions/',\n    DETAIL: id => `/permissions/${id}/`\n  },\n  // Organization Management\n  ORGANIZATIONS: {\n    LIST: '/organizations/',\n    CREATE: '/organizations/',\n    DETAIL: id => `/organizations/${id}/`,\n    UPDATE: id => `/organizations/${id}/`,\n    DELETE: id => `/organizations/${id}/`\n  },\n  // SDT Management\n  SDT: {\n    LIST: '/sdt/',\n    CREATE: '/sdt/',\n    DETAIL: id => `/sdt/${id}/`,\n    UPDATE: id => `/sdt/${id}/`,\n    DELETE: id => `/sdt/${id}/`,\n    STATUS: id => `/sdt/${id}/status/`,\n    HEALTH: id => `/sdt/${id}/health/`,\n    MONITORING: '/sdt/monitoring/'\n  },\n  // Customers\n  CUSTOMERS: {\n    LIST: '/customers/',\n    CREATE: '/customers/',\n    DETAIL: id => `/customers/${id}/`,\n    UPDATE: id => `/customers/${id}/`,\n    DELETE: id => `/customers/${id}/`,\n    SEARCH: '/customers/search/',\n    SUBSCRIPTIONS: id => `/customers/${id}/subscriptions/`,\n    PAYMENTS: id => `/customers/${id}/payments/`\n  },\n  // Billing\n  BILLING: {\n    INVOICES: '/billing/invoices/',\n    PAYMENTS: '/billing/payments/',\n    REPORTS: '/billing/reports/',\n    GENERATE_INVOICE: '/billing/generate-invoice/',\n    PROCESS_PAYMENT: '/billing/process-payment/'\n  },\n  // Network Monitoring\n  NETWORK: {\n    INTERFACES: '/network/interfaces/',\n    CONNECTIONS: '/network/connections/',\n    STATS: '/network/stats/',\n    MONITORING: '/network/monitoring/'\n  },\n  // Reports\n  REPORTS: {\n    REVENUE: '/reports/revenue/',\n    CUSTOMERS: '/reports/customers/',\n    NETWORK: '/reports/network/',\n    EXPORT: '/reports/export/'\n  }\n};\n\n// Performance monitoring utilities (optimized)\nexport const apiPerformance = {\n  measureRequestTime: (url, method = 'GET') => {\n    const startTime = performance.now();\n    return () => {\n      const endTime = performance.now();\n      const duration = endTime - startTime;\n\n      // Only log in development\n      if (isDevelopment) {\n        console.log(`📊 [Performance] ${method} ${url}: ${duration.toFixed(2)}ms`);\n      }\n\n      // Store metrics for analytics (production safe)\n      if (typeof window !== 'undefined' && window.performanceMetrics) {\n        window.performanceMetrics.push({\n          url,\n          method,\n          duration,\n          timestamp: Date.now()\n        });\n\n        // Keep only last 100 metrics to prevent memory leaks\n        if (window.performanceMetrics.length > 100) {\n          window.performanceMetrics = window.performanceMetrics.slice(-50);\n        }\n      }\n      return duration;\n    };\n  },\n  getSlowRequests: () => {\n    if (typeof window === 'undefined' || !window.performanceMetrics) return [];\n    return window.performanceMetrics.filter(metric => metric.duration > 2000).sort((a, b) => b.duration - a.duration).slice(0, 10); // Return only top 10 slowest\n  },\n  clearMetrics: () => {\n    if (typeof window !== 'undefined' && window.performanceMetrics) {\n      window.performanceMetrics = [];\n    }\n  }\n};\n\n// Initialize performance metrics collection (production safe)\nif (typeof window !== 'undefined') {\n  window.performanceMetrics = [];\n\n  // Clear metrics periodically to prevent memory leaks\n  setInterval(() => {\n    if (window.performanceMetrics && window.performanceMetrics.length > 200) {\n      window.performanceMetrics = window.performanceMetrics.slice(-100);\n    }\n  }, 5 * 60 * 1000); // Every 5 minutes\n}\nexport default api;","map":{"version":3,"names":["axios","store","logout","BASE_URL","api","create","baseURL","timeout","headers","pendingRequests","Map","isDevelopment","process","env","NODE_ENV","interceptors","request","use","config","metadata","startTime","performance","now","state","getState","token","auth","Authorization","requestKey","method","url","JSON","stringify","params","has","controller","get","abort","AbortController","signal","set","_config$method","console","log","toUpperCase","timestamp","Date","toISOString","error","Promise","reject","response","duration","delete","_response$config$meth","status","toFixed","warn","window","performanceMetrics","push","type","_error$response4","originalRequest","_originalRequest$meth","_error$response","message","_error$response2","_error$response3","_retry","refreshToken","post","refresh_token","access","newToken","data","tokens","refreshError","dispatch","location","href","ENDPOINTS","AUTH","LOGIN","REFRESH","LOGOUT","VERIFY","USERS","LIST","CREATE","DETAIL","id","UPDATE","DELETE","PROFILE","CHANGE_PASSWORD","PERMISSIONS","ROLES","ASSIGN","BULK_ASSIGN","USER_ROLES","ORGANIZATIONS","SDT","STATUS","HEALTH","MONITORING","CUSTOMERS","SEARCH","SUBSCRIPTIONS","PAYMENTS","BILLING","INVOICES","REPORTS","GENERATE_INVOICE","PROCESS_PAYMENT","NETWORK","INTERFACES","CONNECTIONS","STATS","REVENUE","EXPORT","apiPerformance","measureRequestTime","endTime","length","slice","getSlowRequests","filter","metric","sort","a","b","clearMetrics","setInterval"],"sources":["C:/Users/Arman/Desktop/ktl-isp-billing-frontend-main/ktl-isp-billing-frontend-main/src/services/api.js"],"sourcesContent":["// src/services/api.js - Optimized with conditional logging and performance improvements\nimport axios from 'axios';\nimport { store } from '../store';\nimport { logout } from '../store/authSlice';\n\n// Base URL configuration\nconst BASE_URL = 'https://ktl-isp-billing-app-qza33.ondigitalocean.app/api/v1';\n\n// Create axios instance with optimized configuration\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 15000, // Reduced from 30s to 15s for better UX\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Global request queue management to prevent duplicate requests\nconst pendingRequests = new Map();\n\n// Development flag for logging\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\n// Request interceptor with timing and deduplication\napi.interceptors.request.use(\n  (config) => {\n    // Start timing\n    config.metadata = { startTime: performance.now() };\n    \n    // Add auth token if available\n    const state = store.getState();\n    const token = state.auth.token;\n    \n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    // Request deduplication key\n    const requestKey = `${config.method}:${config.url}:${JSON.stringify(config.params)}`;\n    \n    // Cancel duplicate requests\n    if (pendingRequests.has(requestKey)) {\n      const controller = pendingRequests.get(requestKey);\n      controller.abort('Duplicate request cancelled');\n    }\n    \n    // Create new abort controller for this request\n    const controller = new AbortController();\n    config.signal = controller.signal;\n    pendingRequests.set(requestKey, controller);\n\n    // Only log in development\n    if (isDevelopment) {\n      console.log(`🚀 [API Request] ${config.method?.toUpperCase()} ${config.url}`, {\n        timestamp: new Date().toISOString(),\n        params: config.params,\n      });\n    }\n\n    return config;\n  },\n  (error) => {\n    if (isDevelopment) {\n      console.error('❌ [API Request Error]', error);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor with timing and auto-retry\napi.interceptors.response.use(\n  (response) => {\n    // Calculate request duration\n    const duration = performance.now() - response.config.metadata.startTime;\n    \n    // Remove from pending requests\n    const requestKey = `${response.config.method}:${response.config.url}:${JSON.stringify(response.config.params)}`;\n    pendingRequests.delete(requestKey);\n\n    // Only log in development or for slow requests\n    if (isDevelopment) {\n      console.log(`✅ [API Response] ${response.config.method?.toUpperCase()} ${response.config.url}`, {\n        status: response.status,\n        duration: `${duration.toFixed(2)}ms`,\n        timestamp: new Date().toISOString(),\n      });\n    }\n\n    // Log slow requests even in production for monitoring\n    if (duration > 2000) {\n      console.warn(`🐌 [Slow Request] ${response.config.url} took ${duration.toFixed(2)}ms`);\n      \n      // Send to monitoring service in production\n      if (!isDevelopment && window.performanceMetrics) {\n        window.performanceMetrics.push({\n          type: 'slow_request',\n          url: response.config.url,\n          method: response.config.method,\n          duration,\n          timestamp: Date.now()\n        });\n      }\n    }\n\n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    const duration = originalRequest?.metadata ? \n      performance.now() - originalRequest.metadata.startTime : 0;\n\n    // Remove from pending requests\n    if (originalRequest) {\n      const requestKey = `${originalRequest.method}:${originalRequest.url}:${JSON.stringify(originalRequest.params)}`;\n      pendingRequests.delete(requestKey);\n    }\n\n    // Only log detailed errors in development\n    if (isDevelopment) {\n      console.error(`❌ [API Error] ${originalRequest?.method?.toUpperCase()} ${originalRequest?.url}`, {\n        status: error.response?.status,\n        message: error.message,\n        duration: `${duration.toFixed(2)}ms`,\n        timestamp: new Date().toISOString(),\n      });\n    } else {\n      // In production, only log critical errors\n      if (error.response?.status >= 500) {\n        console.error(`Server Error: ${error.response?.status} for ${originalRequest?.url}`);\n      }\n    }\n\n    // Handle token refresh for 401 errors\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      try {\n        const state = store.getState();\n        const refreshToken = state.auth.refreshToken;\n        \n        if (refreshToken) {\n          const response = await api.post('/auth/refresh/', {\n            refresh_token: refreshToken\n          });\n          \n          const { access: newToken } = response.data.data.tokens;\n          \n          // Update the authorization header\n          originalRequest.headers.Authorization = `Bearer ${newToken}`;\n          \n          return api(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, logout user\n        store.dispatch(logout());\n        if (typeof window !== 'undefined') {\n          window.location.href = '/login';\n        }\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Enhanced endpoints with organization management\nexport const ENDPOINTS = {\n  // Authentication\n  AUTH: {\n    LOGIN: '/auth/login/',\n    REFRESH: '/auth/refresh/',\n    LOGOUT: '/auth/logout/',\n    VERIFY: '/auth/verify/',\n  },\n\n  // User Management\n  USERS: {\n    LIST: '/users/',\n    CREATE: '/users/',\n    DETAIL: (id) => `/users/${id}/`,\n    UPDATE: (id) => `/users/${id}/`,\n    DELETE: (id) => `/users/${id}/`,\n    PROFILE: '/users/profile/',\n    CHANGE_PASSWORD: '/users/change-password/',\n    PERMISSIONS: '/users/permissions/',\n  },\n\n  // Role Management\n  ROLES: {\n    LIST: '/roles/',\n    CREATE: '/roles/',\n    DETAIL: (id) => `/roles/${id}/`,\n    UPDATE: (id) => `/roles/${id}/`,\n    DELETE: (id) => `/roles/${id}/`,\n    ASSIGN: '/roles/assign/',\n    BULK_ASSIGN: '/roles/bulk-assign/',\n  },\n\n  // User Role Assignments\n  USER_ROLES: {\n    LIST: '/user-roles/',\n    DETAIL: (id) => `/user-roles/${id}/`,\n    UPDATE: (id) => `/user-roles/${id}/`,\n    DELETE: (id) => `/user-roles/${id}/`,\n  },\n\n  // Permissions\n  PERMISSIONS: {\n    LIST: '/permissions/',\n    DETAIL: (id) => `/permissions/${id}/`,\n  },\n\n  // Organization Management\n  ORGANIZATIONS: {\n    LIST: '/organizations/',\n    CREATE: '/organizations/',\n    DETAIL: (id) => `/organizations/${id}/`,\n    UPDATE: (id) => `/organizations/${id}/`,\n    DELETE: (id) => `/organizations/${id}/`,\n  },\n\n  // SDT Management\n  SDT: {\n    LIST: '/sdt/',\n    CREATE: '/sdt/',\n    DETAIL: (id) => `/sdt/${id}/`,\n    UPDATE: (id) => `/sdt/${id}/`,\n    DELETE: (id) => `/sdt/${id}/`,\n    STATUS: (id) => `/sdt/${id}/status/`,\n    HEALTH: (id) => `/sdt/${id}/health/`,\n    MONITORING: '/sdt/monitoring/',\n  },\n\n  // Customers\n  CUSTOMERS: {\n    LIST: '/customers/',\n    CREATE: '/customers/',\n    DETAIL: (id) => `/customers/${id}/`,\n    UPDATE: (id) => `/customers/${id}/`,\n    DELETE: (id) => `/customers/${id}/`,\n    SEARCH: '/customers/search/',\n    SUBSCRIPTIONS: (id) => `/customers/${id}/subscriptions/`,\n    PAYMENTS: (id) => `/customers/${id}/payments/`,\n  },\n  \n  // Billing\n  BILLING: {\n    INVOICES: '/billing/invoices/',\n    PAYMENTS: '/billing/payments/',\n    REPORTS: '/billing/reports/',\n    GENERATE_INVOICE: '/billing/generate-invoice/',\n    PROCESS_PAYMENT: '/billing/process-payment/',\n  },\n  \n  // Network Monitoring\n  NETWORK: {\n    INTERFACES: '/network/interfaces/',\n    CONNECTIONS: '/network/connections/',\n    STATS: '/network/stats/',\n    MONITORING: '/network/monitoring/',\n  },\n  \n  // Reports\n  REPORTS: {\n    REVENUE: '/reports/revenue/',\n    CUSTOMERS: '/reports/customers/',\n    NETWORK: '/reports/network/',\n    EXPORT: '/reports/export/',\n  },\n};\n\n// Performance monitoring utilities (optimized)\nexport const apiPerformance = {\n  measureRequestTime: (url, method = 'GET') => {\n    const startTime = performance.now();\n    return () => {\n      const endTime = performance.now();\n      const duration = endTime - startTime;\n      \n      // Only log in development\n      if (isDevelopment) {\n        console.log(`📊 [Performance] ${method} ${url}: ${duration.toFixed(2)}ms`);\n      }\n      \n      // Store metrics for analytics (production safe)\n      if (typeof window !== 'undefined' && window.performanceMetrics) {\n        window.performanceMetrics.push({\n          url,\n          method,\n          duration,\n          timestamp: Date.now()\n        });\n        \n        // Keep only last 100 metrics to prevent memory leaks\n        if (window.performanceMetrics.length > 100) {\n          window.performanceMetrics = window.performanceMetrics.slice(-50);\n        }\n      }\n      \n      return duration;\n    };\n  },\n\n  getSlowRequests: () => {\n    if (typeof window === 'undefined' || !window.performanceMetrics) return [];\n    return window.performanceMetrics\n      .filter(metric => metric.duration > 2000)\n      .sort((a, b) => b.duration - a.duration)\n      .slice(0, 10); // Return only top 10 slowest\n  },\n\n  clearMetrics: () => {\n    if (typeof window !== 'undefined' && window.performanceMetrics) {\n      window.performanceMetrics = [];\n    }\n  }\n};\n\n// Initialize performance metrics collection (production safe)\nif (typeof window !== 'undefined') {\n  window.performanceMetrics = [];\n  \n  // Clear metrics periodically to prevent memory leaks\n  setInterval(() => {\n    if (window.performanceMetrics && window.performanceMetrics.length > 200) {\n      window.performanceMetrics = window.performanceMetrics.slice(-100);\n    }\n  }, 5 * 60 * 1000); // Every 5 minutes\n}\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}